from __future__ import annotations
from typing import TYPE_CHECKING

if TYPE_CHECKING:
  from typing import Protocol, List, Literal, overload, Any
  from trueseeing.core.android.store import Store
  from trueseeing.core.android.context import APKContext

  ContextType = Literal['apk']

  class Context(Protocol):
    @property
    def wd(self) -> str: ...
    @property
    def target(self) -> str: ...
    @property
    def type(self) -> ContextType: ...
    @property
    def excludes(self) -> List[str]: ...
    @excludes.setter
    def excludes(self, v: List[str]) -> None: ...
    def fingerprint_of(self) -> str: ...
    def store(self) -> Store: ...
    def remove(self) -> None: ...
    def exists(self) -> bool: ...
    def create(self, exist_ok: bool = False) -> None: ...
    def has_patches(self) -> bool: ...
    def get_analysis_level(self) -> int: ...
    async def analyze(self, level: int = 3) -> None: ...
    @overload                                                        # type: ignore[misc]
    def require_type(self, typ: Literal['apk']) -> APKContext: ...
    def require_type(self, typ: ContextType) -> Any: ...
